function e(){return/Mobi|Android|iPhone|iPad|iPod/.test(navigator.userAgent)}import*as i from"./gpu.mjs";const t=document.getElementById("c").getContext("webgl2",{powerPreference:"high-performance"});t.disable(t.DEPTH_TEST),t.getExtension("EXT_color_buffer_float"),t.disable(t.SCISSOR_TEST),t.canvas.style.width=Math.min(innerWidth,innerHeight),t.canvas.style.height=Math.min(innerWidth,innerHeight),t.canvas.width=parseInt(t.canvas.style.width)/(e()?3:1.5),t.canvas.height=parseInt(t.canvas.style.height)/(e()?3:1.5);const c=[t.canvas.width,t.canvas.height];let[o,v,n,r]=[.5,.5,0,0];t.canvas.onpointerdown=e=>{e.preventDefault(),[o,v]=[e.offsetX/parseInt(t.canvas.style.width),1-e.offsetY/parseInt(t.canvas.style.height)],[n,r]=[1,1]},t.canvas.onpointerup=e=>n=0,t.canvas.onpointermove=e=>[o,v]=[e.offsetX/parseInt(t.canvas.style.width),1-e.offsetY/parseInt(t.canvas.style.height)];const d=e()?[40,40]:[50,50],a=e()?[100,100]:[200,200],s=i.make_frag_prog(t,"float hash12(vec2 p){vec3 p3=fract(vec3(p.xyx)*.1031);p3+=dot(p3,p3.yzx+33.33);return fract((p3.x+p3.y)*p3.z);}vec2 hash21(float p){vec3 p3=fract(vec3(p)*vec3(.1031,.103,.0973));p3+=dot(p3,p3.yzx+33.33);return fract((p3.xx+p3.yz)*p3.zy);}vec2 hash22(vec2 p){vec3 p3=fract(vec3(p.xyx)*vec3(.1031,.103,.0973));p3+=dot(p3,p3.yzx+33.33);return fract((p3.xx+p3.yz)*p3.zy);}float sdf_cone(vec3 p,vec2 c,float h){float q=length(p.xz);return max(dot(c.xy,vec2(q,p.y)),-h-p.y);}float sdf_ellipsoid(vec3 p,vec3 r){float k0=length(p/r),k1=length(p/(r*r));return k0*(k0-1.)/k1;}float sdf_plane(vec3 p,vec3 n,float d){return dot(p,n)+d;}float sdf_sphere(vec3 p,float r){return length(p)-r;}float sdf_union(float d1,float d2){return min(d1,d2);}float sdf_smooth_union(float d1,float d2,float k){float h=max(k-abs(d1-d2),0.)/k;return min(d1,d2)-h*h*k*.25;}float sdf_smooth_subtract(float d1,float d2,float k){float h=max(k-d1-d2,0.)/k;return max(d1,-d2)+h*h*k*.25;}float sdf_circle(vec2 p,float radius){return length(p)-radius;}vec2 neohookean_delta(vec2 p1,vec2 p2,vec2 p3,vec2 o1,vec2 o2,vec2 o3,vec2 dampings){mat2 X=mat2(p2-p1,p3-p1),Xhat=mat2(o2-o1,o3-o1),B=inverse(Xhat);X*=B;float detB=1./determinant(Xhat);o1=detB*vec2(p2.y-p3.y,p3.x-p2.x);p3=detB*vec2(p3.y-p1.y,p1.x-p3.x);p1=detB*vec2(p1.y-p2.y,p2.x-p1.x);detB=dot(o1,o1)+dot(p3,p3)+dot(p1,p1);float ch_constraint=determinant(X)-1.5-dampings.y/dampings.x,ch_pbd_lambda=-ch_constraint*dampings.x/detB,b1=B[0][0],b2=B[1][0],b3=B[0][1],b4=B[1][1],f1=X[0][0],f2=X[1][0],f3=X[0][1];ch_constraint=X[1][1];detB=length(vec4(f1,f2,f3,ch_constraint));p1=vec2(f1*b1+f2*b2,f3*b1+ch_constraint*b2)/detB;p2=vec2(f1*b3+f2*b4,f3*b3+ch_constraint*b4)/detB;p3=-p1-p2;ch_constraint=-detB*dampings.y/(dot(p3,p3)+dot(p1,p1)+dot(p2,p2));return ch_pbd_lambda*o1+ch_constraint*p3;}vec3 length3_delta(vec3 pt,vec3 opt,vec3 neigh,vec3 oneigh,float damping){float dist=length(pt-neigh),desired=length(opt-oneigh);pt=(pt-neigh)/dist;float grad_sum_sq=2.*(pt.x*pt.x+pt.y*pt.y+pt.z*pt.z);dist=grad_sum_sq<1e-6?0.:(-dist+desired)*damping/grad_sum_sq;return dist*pt;}vec3 length3_delta2(vec3 pt,vec3 opt,vec3 neigh,vec3 oneigh,float damping,float extr){float dist=length(pt-neigh);extr*=length(opt-oneigh);pt=(pt-neigh)/dist;float grad_sum_sq=2.*(pt.x*pt.x+pt.y*pt.y+pt.z*pt.z);dist=grad_sum_sq<1e-6?0.:(-dist+extr)*damping/grad_sum_sq;return dist*pt;}vec4 face(vec3 p,vec4 mouse,int itr){float plane_=sdf_smooth_subtract(sdf_smooth_subtract(sdf_smooth_union(sdf_smooth_union(sdf_smooth_union(sdf_smooth_subtract(sdf_plane(p-vec3(0),vec3(0,0,-1),-.05),sdf_sphere((p-vec3(0,-.35,0))*vec3(.8,2,1),.2),.22),sdf_sphere((p-vec3(.06,-.045,0))*vec3(8,8,1),.2),.2),sdf_sphere((p-vec3(-.06,-.045,0))*vec3(8,8,1),.2),.2),sdf_cone((p-vec3(-.003,.09,0))*vec3(3.5,1.5,1),vec2(.3),.2)*5.,.2),sdf_sphere((p-vec3(.06,-.06,0))*vec3(12,12,1),.2),.2),sdf_sphere((p-vec3(-.06,-.06,0))*vec3(12,12,1),.2),.2);vec2 eye_center1=vec2(.35,.27),eye_center2=vec2(-.35,.27);vec4 plane=vec4(plane_,vec3(1,0,0));plane_=sdf_sphere((p-vec3(eye_center1,0))*vec3(1,1.5,1),.2);float eye2=sdf_sphere((p-vec3(eye_center2,0))*vec3(1,1.5,1),.2);vec4 eyes=vec4(sdf_union(plane_,eye2),vec3(1));eye2=80.;plane_=floor(float(itr)/eye2);eye2=fract(float(itr)/eye2);vec2 rndA=(hash21(plane_)*2.-1.)*.015,rndB=(hash21(plane_+1.)*2.-1.)*.015;if(length(mouse.xy*2.-1.-eye_center1)<.15)rndA=rndB=vec2(0);if(length(mouse.xy*2.-1.-eye_center2)<.15)rndA=rndB=vec2(0);rndA=mix(rndA,rndB,eye2);rndB=mouse.xy*2.-1.+rndA-eye_center1;rndA=mouse.xy*2.-1.+rndA-eye_center2;if(length(rndB)>.08)rndB=normalize(rndB)*.08;if(length(rndA)>.08)rndA=normalize(rndA)*.08;eye2=sdf_sphere((p-vec3(eye_center1+rndB,-.19))*vec3(1,1,2),.04);plane_=sdf_sphere((p-vec3(eye_center2+rndA,-.19))*vec3(1,1,2),.04);mouse=vec4(sdf_union(eye2,plane_),vec3(.05));eye2=-.28+.009*sin(-float(itr)/1e3);plane_=-.42+.01*sin(-float(itr)/1e3+3.14);float tooth=sdf_union(sdf_union(sdf_union(sdf_union(sdf_union(sdf_union(sdf_union(sdf_union(sdf_union(sdf_union(sdf_union(sdf_union(sdf_union(sdf_union(sdf_union(sdf_ellipsoid(p-vec3(.033,eye2-.02,.05),.02*vec3(1.5,2,1)),sdf_ellipsoid(p-vec3(-.032,eye2-.02,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(.099,eye2+.0035,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(-.097,eye2-.004,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(.162,eye2+.003,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(-.164,eye2,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(.229,eye2,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(-.231,eye2,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(.034,plane_-.005,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(-.033,plane_,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(.093,plane_,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(-.098,plane_+.005,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(.162,plane_,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(-.164,plane_,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(.231,plane_,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(-.229,plane_,.05),.02*vec3(1.5,2,1)));vec4 teeth=vec4(tooth,vec3(2.2));tooth=sdf_union(sdf_ellipsoid(p-vec3(0,eye2+.08,.1),.1*vec3(9,1,1)),sdf_ellipsoid(p-vec3(0,plane_-.08,.1),.1*vec3(9,1,1)));vec4 gum=vec4(tooth,vec3(1,0,0));tooth=sdf_ellipsoid(p-vec3(0,-.49+.01*sin(float(itr)/11e2),.25),.2*vec3(2.5,1,1));vec4 tounge=vec4(tooth,vec3(.94,.5,.5)*4.);const int N=6;tooth=1e4;vec4 parts[N]=vec4[N](plane,eyes,mouse,teeth,gum,tounge);for(int i=0;i<N;i++)tooth=min(tooth,parts[i].x);for(int i=0;i<N;i++)if(tooth==parts[i].x)return parts[i];}float ray_march_face_height(vec2 uv,vec4 mouse,int itr,vec3 light_pos){if(uv.y<-.1)return.25;light_pos=vec3(uv,-1);vec3 ray_dir=vec3(0,0,1);float t=0.;for(int i=0;i<30;i++){vec4 sdf=face(light_pos+t*ray_dir,mouse,itr);t+=sdf.x;if(sdf.x<1e-5)return.2-(light_pos+t*ray_dir).z;}return 0.;}uniform sampler2D img1,img2,img3,img4;uniform int sub_itr;uniform vec4 mouse;uniform vec2 gdim,tdim,dim;uniform int itr;struct particle{vec2 pos;vec2 prev;bool is_selected;};struct cell{float height;float base_height;float mass;vec2 vel;vec2 cm;float cheek;};void P2V(particle p,out vec4 v1,out vec4 v4){v1=vec4(p.pos,p.prev);v4.x=p.is_selected?1.:0.;}particle P(ivec2 ixy){vec4 t1=texelFetch(img1,ixy,0),t4=texelFetch(img4,ixy,0);return particle(t1.xy,t1.zw,t4.x!=0.);}void C2V(cell c,out vec4 v2,out vec4 v3){v2=vec4(c.height,c.mass,c.vel);v3=vec4(c.cm,c.cheek,c.base_height);}cell C(ivec2 ixy){vec4 t2=texelFetch(img2,ixy,0),t3=texelFetch(img3,ixy,0);return cell(t2.x,t3.w,t2.y,t2.zw,t3.xy,t3.z);}vec2 orig_pt(ivec2 ixy){return vec2(ixy)/(gdim-1.)*2.-1.;}void init(out vec4 ocol1,out vec4 ocol2,out vec4 ocol3,out vec4 ocol4,ivec2 ixy,vec2 xy,vec2 uv){if(ixy.x<int(gdim.x)&&ixy.y<int(gdim.y))P2V(particle(orig_pt(ixy),orig_pt(ixy),false),ocol1,ocol4);float init_cheek=0.;if(sdf_circle((uv*2.-1.-vec2(.35,.25))*vec2(1,1.33),.2)<0.)init_cheek=.3;if(sdf_circle((uv*2.-1.-vec2(-.35,.25))*vec2(1,1.33),.2)<0.)init_cheek=.3;float init_height=hash12(xy),base_height=ray_march_face_height(uv*2.-1.,mouse,itr,vec3(0)),init_mass=0.;C2V(cell(init_height,base_height,init_mass,(hash22(xy)*2.-1.)*4.,vec2(.5),init_cheek),ocol2,ocol3);}vec4 deformed_pt(ivec2 ixy){vec2 uv=(vec2(ixy)+.5)/vec2(tdim)*vec2(gdim-1.);ixy=ivec2(floor(uv));uv=fract(uv);float b=step(1.,uv.x+uv.y);uv=mix(uv,1.-uv,b);ivec2 m=ivec2(b),i0=ixy+m,i1=ixy+ivec2(1-m.x,m.y);m=ixy+ivec2(m.x,1-m.y);vec2 p0=P(i0).pos,p1=P(i1).pos,p2=P(m).pos;return vec4(p0*(1.-uv.x-uv.y)+p1*uv.x+p2*uv.y,orig_pt(i0)*(1.-uv.x-uv.y)+orig_pt(i1)*uv.x+orig_pt(m)*uv.y);}bool eyelid(vec2 uv,vec2 center,vec2 radii,float slope){uv-=center;bool in_ellipse=uv.x/radii.x*(uv.x/radii.x)+uv.y/radii.y*(uv.y/radii.y)<1.,below_line=uv.y<slope*uv.x;return in_ellipse&&below_line;}bool in_face_hole(vec2 uv){return eyelid(uv,vec2(-.35,.27),vec2(.2,.3/1.9),.15)?true:eyelid(uv,vec2(.35,.27),vec2(.2,.3/1.9),-.15)?true:sdf_circle((uv-vec2(0,-.35))*vec2(.72,3.5),.2)<0.?true:sdf_circle((uv-vec2(.06,-.06))*vec2(12),.2)<0.?true:sdf_circle((uv-vec2(-.06))*vec2(12),.2)<0.?true:false;}particle update_particle(ivec2 ixy){particle p=P(ixy);if(ixy.x==0||ixy.y==0||ixy.x==int(gdim.x-1.)||ixy.y==int(gdim.y-1.))return p;vec2 uv=orig_pt(ixy);if(sdf_circle((uv-vec2(.35,.27))*vec2(1,3.8),.25)<0.||sdf_circle((uv-vec2(-.35,.27))*vec2(1,3.8),.25)<0.)return p;float num_constraints=0.;uv=vec2(0);ivec2 dij[6]=ivec2[6](ivec2(1,0),ivec2(1,1),ivec2(0,1),ivec2(-1,0),ivec2(-1,-1),ivec2(0,-1));for(int i=0;i<6;i++){ivec2 nc1=ixy+dij[i],nc2=ixy+dij[(i+1)%6];if(nc1.x<0||nc1.x>=int(gdim.x)||nc1.y<0||nc1.y>=int(gdim.y))continue;if(nc2.x<0||nc2.x>=int(gdim.x)||nc2.y<0||nc2.y>=int(gdim.y))continue;vec2 damping=vec2(.1,.05);if(in_face_hole(vec2(nc1)/gdim*2.-1.))damping=vec2(.05);if(in_face_hole(vec2(nc2)/gdim*2.-1.))damping=vec2(.05);vec2 p1=p.pos,p2=P(nc1).pos,p3=P(nc2).pos,o1=orig_pt(ixy),o2=orig_pt(nc1),o3=orig_pt(nc2);uv+=neohookean_delta(p1,p2,p3,o1,o2,o3,damping);num_constraints+=2.;}float overrelax=2.,grav=1e-5;if(p.is_selected){vec3 m=vec3(mouse.xy*2.-1.,0);uv+=length3_delta(vec3(p.pos,0),m,m,m,.4).xy;num_constraints+=1.;}uv=p.pos+overrelax*uv/num_constraints;vec2 vel=.998*(uv-p.prev);p.pos=uv+vel-vec2(0,grav);if(itr>100)p.pos=uv+vel-vec2(0,grav);else p.pos=uv;p.prev=uv;if(mouse.z==0.)p.is_selected=false;else if(mouse.w==1.)if(length(p.pos-mouse.xy*2.+1.)<1./min(gdim.x,gdim.y)*2.)p.is_selected=true;return p;}vec3 area_overlap(vec2 dxy,float K){vec2 omin=clamp(dxy-K*.5,0.,1.);dxy=clamp(dxy+K*.5,0.,1.);return vec3(.5*(omin+dxy),(dxy.x-omin.x)*(dxy.y-omin.y)/(K*K));}cell update_cell(ivec2 ixy){cell c=C(ixy);const float dt=.3;if(itr%2==0){if(in_face_hole(vec2(ixy)/tdim*2.-1.))return c;cell c_next=c;c_next.cheek=0.;c_next.vel=vec2(0);c_next.cm=vec2(0);c_next.mass=0.;const int N=1;for(int dx=-N;dx<=N;dx++)for(int dy=-N;dy<=N;dy++){vec2 dxy=vec2(dx,dy);if(in_face_hole((vec2(ixy)+dxy)/tdim*2.-1.))continue;if(any(greaterThanEqual(vec2(ixy)+dxy,vec2(tdim))))continue;if(any(lessThan(vec2(ixy)+dxy,vec2(0))))continue;cell nc=C(ixy+ivec2(dxy));dxy=dxy+nc.cm+dt*nc.vel;const float diffusion=1.1;vec3 A=area_overlap(dxy,diffusion);dxy=A.xy;float overlap_mass=A.z*nc.mass;c_next.mass+=overlap_mass;c_next.vel+=nc.vel*overlap_mass;c_next.cm+=dxy*overlap_mass;}if(c_next.mass>1e-4)c_next.vel/=c_next.mass,c_next.cm/=c_next.mass;c=c_next;}else{if(in_face_hole(vec2(ixy)/tdim*2.-1.))return c;vec2 acceleration=vec2(0);vec3 avg_vel=vec3(0);const int N=1;for(int dx=-N;dx<=N;dx++)for(int dy=-N;dy<=N;dy++){vec2 dxy=vec2(dx,dy);if(in_face_hole((vec2(ixy)+dxy)/tdim*2.-1.))continue;if(any(greaterThanEqual(vec2(ixy)+dxy,vec2(tdim))))continue;if(any(lessThan(vec2(ixy)+dxy,vec2(0))))continue;cell nc=C(ixy+ivec2(dxy));const float volume=1.,k=.02,rho_0=.2;float rho_i=c.mass/volume,rho_j=nc.mass/volume,P_i=k*rho_i*(rho_i-rho_0),P_j=k*rho_j*(rho_j-rho_0);dxy=dxy+nc.cm-c.cm;float sm_kern=exp(-dot(dxy,dxy));if(rho_i>1e-4&&rho_j>1e-4)acceleration-=nc.mass*(P_i/(rho_i*rho_i)+P_j/(rho_j*rho_j))*sm_kern*dxy;}vec2 uv=vec2(ixy)/tdim*2.-1.,face_grad=vec2((C(ixy+ivec2(1,0)).base_height-C(ixy-ivec2(1,0)).base_height)/2.,(C(ixy+ivec2(0,1)).base_height-C(ixy-ivec2(0,1)).base_height)/2.),height_grad=vec2((C(ixy+ivec2(1,0)).height-C(ixy-ivec2(1,0)).height)/2.,(C(ixy+ivec2(0,1)).height-C(ixy-ivec2(0,1)).height)/2.);c.vel+=-.04*dt*height_grad-1.1*dt*face_grad;c.vel+=dt*acceleration+dt*vec2(0,-.02);float amount=mouse.z==1.?.015:.004;if(sdf_circle((uv-vec2(.35,.22))*vec2(1,1.1),.22)<0.&&uv.y<.27)c.mass+=amount;if(sdf_circle((uv-vec2(-.35,.22))*vec2(1,1.1),.22)<0.&&uv.y<.27)c.mass+=amount;}ivec2 pxy=ivec2(vec2(ixy)/vec2(tdim)*gdim);if(P(pxy).is_selected)c.cheek+=.2;float avg_cheek=C(ixy+ivec2(1,0)).cheek+C(ixy-ivec2(1,0)).cheek;avg_cheek+=C(ixy+ivec2(0,1)).cheek+C(ixy-ivec2(0,1)).cheek;c.cheek=mix(c.cheek,.25*avg_cheek,.9)*.995;avg_cheek=.5;vec4 dpt=deformed_pt(ixy)*vec4(tdim,tdim);vec3 P0=vec3(dpt.xy,C(ixy).height),OP0=vec3(dpt.zw,avg_cheek);float num_constraints=0.;vec3 delta=vec3(0);ivec2 neighs[8]=ivec2[8](ivec2(1,0),ivec2(1,1),ivec2(0,1),ivec2(-1,1),ivec2(-1,0),ivec2(-1,-1),ivec2(0,-1),ivec2(1,-1));for(int i=0;i<8;i++){ivec2 nc=ixy+neighs[i];if(nc.x<0||nc.x>=int(tdim.x)||nc.y<0||nc.y>=int(tdim.y))continue;if(in_face_hole(vec2(nc)/tdim*2.-1.))continue;vec4 dnpt=deformed_pt(nc)*vec4(tdim,tdim);vec3 PN=vec3(dnpt.xy,C(nc).height),OPN=vec3(dnpt.zw,avg_cheek);delta+=length3_delta2(P0,OP0,PN,OPN,.9,.92);num_constraints+=1.;}if(!in_face_hole(vec2(ixy)/tdim*2.-1.)){const float overrelax_height=1.9;c.height+=overrelax_height*delta.z/num_constraints;}return c;}void update(out vec4 ocol1,out vec4 ocol2,out vec4 ocol3,out vec4 ocol4,ivec2 ixy,vec2 xy,vec2 uv){if(ixy.x<int(gdim.x)&&ixy.y<int(gdim.y))P2V(update_particle(ixy),ocol1,ocol4);C2V(update_cell(ixy),ocol2,ocol3);}layout(location=0)out vec4 ocol1;layout(location=1)out vec4 ocol2;layout(location=2)out vec4 ocol3;layout(location=3)out vec4 ocol4;void main(){vec2 xy=gl_FragCoord.xy;ivec2 ixy=ivec2(xy);if(itr==0)init(ocol1,ocol2,ocol3,ocol4,ixy,xy,xy/tdim);else update(ocol1,ocol2,ocol3,ocol4,ixy,xy,xy/tdim);}"),l=i.make_prog(t,"\nivec2 idx_to_pt_coord(int idx,vec2 gdim){int cidx=idx/6;ivec2 cell=ivec2(cidx%int(gdim.x-1.),cidx/int(gdim.x-1.)),corner_offsets[4]=ivec2[4](ivec2(0,0),ivec2(1,0),ivec2(0,1),ivec2(1,1));int tri_corners[6]=int[6](0,1,2,1,3,2),tri=idx/3%2;idx%=3;tri=3*tri+idx;cidx=tri_corners[tri];return cell+corner_offsets[cidx];}vec2 idx_to_quad_pos(int idx,vec2 gdim){const vec2 quad_corners[4]=vec2[4](vec2(-1),vec2(1,-1),vec2(-1,1),vec2(1));const int quad_idx[6]=int[6](0,1,2,2,1,3);idx-=int((gdim.x-1.)*(gdim.y-1.)*6.);return quad_corners[quad_idx[idx]];}uniform sampler2D img1,img2,img3,img4;uniform int sub_itr;uniform vec4 mouse;uniform vec2 gdim,tdim,dim;uniform int itr;struct particle{vec2 pos;vec2 prev;bool is_selected;};struct cell{float height;float base_height;float mass;vec2 vel;vec2 cm;float cheek;};particle P(ivec2 ixy){vec4 t1=texelFetch(img1,ixy,0),t4=texelFetch(img4,ixy,0);return particle(t1.xy,t1.zw,t4.x!=0.);}vec2 orig_pt(ivec2 ixy){return vec2(ixy)/(gdim-1.)*2.-1.;}void place_particle(out vec4 pos,out vec3 normal,out vec2 rest_uv,int idx){ivec2 pxy=idx_to_pt_coord(idx,gdim);pos=vec4(P(pxy).pos,0,1);rest_uv=orig_pt(pxy);if(idx>=int((gdim.x-1.)*(gdim.y-1.)*6.))pos=vec4(idx_to_quad_pos(idx,gdim),.5,1);}flat out int oidx;out vec3 vnormal;out vec2 vrest_uv;void main(){place_particle(gl_Position,vnormal,vrest_uv,gl_VertexID);oidx=gl_VertexID;}","void discard_(){discard;}vec2 hash21(float p){vec3 p3=fract(vec3(p)*vec3(.1031,.103,.0973));p3+=dot(p3,p3.yzx+33.33);return fract((p3.xx+p3.yz)*p3.zy);}float sdf_cone(vec3 p,vec2 c,float h){float q=length(p.xz);return max(dot(c.xy,vec2(q,p.y)),-h-p.y);}float sdf_ellipsoid(vec3 p,vec3 r){float k0=length(p/r),k1=length(p/(r*r));return k0*(k0-1.)/k1;}float sdf_plane(vec3 p,vec3 n,float d){return dot(p,n)+d;}float sdf_sphere(vec3 p,float r){return length(p)-r;}float sdf_union(float d1,float d2){return min(d1,d2);}float sdf_smooth_union(float d1,float d2,float k){float h=max(k-abs(d1-d2),0.)/k;return min(d1,d2)-h*h*k*.25;}float sdf_smooth_subtract(float d1,float d2,float k){float h=max(k-d1-d2,0.)/k;return max(d1,-d2)+h*h*k*.25;}float sdf_circle(vec2 p,float radius){return length(p)-radius;}ivec2 idx_to_pt_coord(int idx,vec2 gdim){int cidx=idx/6;ivec2 cell=ivec2(cidx%int(gdim.x-1.),cidx/int(gdim.x-1.)),corner_offsets[4]=ivec2[4](ivec2(0,0),ivec2(1,0),ivec2(0,1),ivec2(1,1));int tri_corners[6]=int[6](0,1,2,1,3,2),tri=idx/3%2;idx%=3;tri=3*tri+idx;cidx=tri_corners[tri];return cell+corner_offsets[cidx];}vec4 face(vec3 p,vec4 mouse,int itr){float plane_=sdf_smooth_subtract(sdf_smooth_subtract(sdf_smooth_union(sdf_smooth_union(sdf_smooth_union(sdf_smooth_subtract(sdf_plane(p-vec3(0),vec3(0,0,-1),-.05),sdf_sphere((p-vec3(0,-.35,0))*vec3(.8,2,1),.2),.22),sdf_sphere((p-vec3(.06,-.045,0))*vec3(8,8,1),.2),.2),sdf_sphere((p-vec3(-.06,-.045,0))*vec3(8,8,1),.2),.2),sdf_cone((p-vec3(-.003,.09,0))*vec3(3.5,1.5,1),vec2(.3),.2)*5.,.2),sdf_sphere((p-vec3(.06,-.06,0))*vec3(12,12,1),.2),.2),sdf_sphere((p-vec3(-.06,-.06,0))*vec3(12,12,1),.2),.2);vec2 eye_center1=vec2(.35,.27),eye_center2=vec2(-.35,.27);vec4 plane=vec4(plane_,vec3(1,0,0));plane_=sdf_sphere((p-vec3(eye_center1,0))*vec3(1,1.5,1),.2);float eye2=sdf_sphere((p-vec3(eye_center2,0))*vec3(1,1.5,1),.2);vec4 eyes=vec4(sdf_union(plane_,eye2),vec3(1));eye2=80.;plane_=floor(float(itr)/eye2);eye2=fract(float(itr)/eye2);vec2 rndA=(hash21(plane_)*2.-1.)*.015,rndB=(hash21(plane_+1.)*2.-1.)*.015;if(length(mouse.xy*2.-1.-eye_center1)<.15)rndA=rndB=vec2(0);if(length(mouse.xy*2.-1.-eye_center2)<.15)rndA=rndB=vec2(0);rndA=mix(rndA,rndB,eye2);rndB=mouse.xy*2.-1.+rndA-eye_center1;rndA=mouse.xy*2.-1.+rndA-eye_center2;if(length(rndB)>.08)rndB=normalize(rndB)*.08;if(length(rndA)>.08)rndA=normalize(rndA)*.08;eye2=sdf_sphere((p-vec3(eye_center1+rndB,-.19))*vec3(1,1,2),.04);plane_=sdf_sphere((p-vec3(eye_center2+rndA,-.19))*vec3(1,1,2),.04);mouse=vec4(sdf_union(eye2,plane_),vec3(.05));eye2=-.28+.009*sin(-float(itr)/1e3);plane_=-.42+.01*sin(-float(itr)/1e3+3.14);float tooth=sdf_union(sdf_union(sdf_union(sdf_union(sdf_union(sdf_union(sdf_union(sdf_union(sdf_union(sdf_union(sdf_union(sdf_union(sdf_union(sdf_union(sdf_union(sdf_ellipsoid(p-vec3(.033,eye2-.02,.05),.02*vec3(1.5,2,1)),sdf_ellipsoid(p-vec3(-.032,eye2-.02,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(.099,eye2+.0035,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(-.097,eye2-.004,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(.162,eye2+.003,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(-.164,eye2,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(.229,eye2,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(-.231,eye2,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(.034,plane_-.005,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(-.033,plane_,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(.093,plane_,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(-.098,plane_+.005,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(.162,plane_,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(-.164,plane_,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(.231,plane_,.05),.02*vec3(1.5,2,1))),sdf_ellipsoid(p-vec3(-.229,plane_,.05),.02*vec3(1.5,2,1)));vec4 teeth=vec4(tooth,vec3(2.2));tooth=sdf_union(sdf_ellipsoid(p-vec3(0,eye2+.08,.1),.1*vec3(9,1,1)),sdf_ellipsoid(p-vec3(0,plane_-.08,.1),.1*vec3(9,1,1)));vec4 gum=vec4(tooth,vec3(1,0,0));tooth=sdf_ellipsoid(p-vec3(0,-.49+.01*sin(float(itr)/11e2),.25),.2*vec3(2.5,1,1));vec4 tounge=vec4(tooth,vec3(.94,.5,.5)*4.);const int N=6;tooth=1e4;vec4 parts[N]=vec4[N](plane,eyes,mouse,teeth,gum,tounge);for(int i=0;i<N;i++)tooth=min(tooth,parts[i].x);for(int i=0;i<N;i++)if(tooth==parts[i].x)return parts[i];}vec3 sdf_normal(vec3 p,vec4 mouse,int itr){float eps=1e-4;return normalize(vec3(face(p+vec3(eps,0,0),mouse,itr).x-face(p-vec3(eps,0,0),mouse,itr).x,face(p+vec3(0,eps,0),mouse,itr).x-face(p-vec3(0,eps,0),mouse,itr).x,face(p+vec3(0,0,eps),mouse,itr).x-face(p-vec3(0,0,eps),mouse,itr).x));}vec3 ray_march_face_color(vec2 uv,vec4 mouse,int itr,vec3 light_pos){vec3 ray_origin=vec3(uv,-1),ray_dir=vec3(0,0,1);float t=0.;for(int i=0;i<18;i++){vec4 sdf=face(ray_origin+t*ray_dir,mouse,itr);t+=sdf.x;if(sdf.x<1e-4){vec3 p=ray_origin+t*ray_dir,color=sdf.yzw*(1.-.9*length(ray_origin-p))*3.5,normal=sdf_normal(p,mouse,itr),reflection=reflect(ray_dir,normal);normal=normalize(light_pos-p);p=vec3(pow(max(0.,dot(reflection,normal)),40.))*4.;return color+.35*p;}}return vec3(0);}float ray_march_face_height(vec2 uv,vec4 mouse,int itr,vec3 light_pos){if(uv.y<-.1)return.25;light_pos=vec3(uv,-1);vec3 ray_dir=vec3(0,0,1);float t=0.;for(int i=0;i<30;i++){vec4 sdf=face(light_pos+t*ray_dir,mouse,itr);t+=sdf.x;if(sdf.x<1e-5)return.2-(light_pos+t*ray_dir).z;}return 0.;}vec3 ray_march_face_normal(vec2 uv,vec4 mouse,int itr,vec3 light_pos){if(uv.y<-.1)return vec3(0,0,1);light_pos=vec3(uv,-1);vec3 ray_dir=vec3(0,0,1);float t=0.;for(int i=0;i<18;i++){vec4 sdf=face(light_pos+t*ray_dir,mouse,itr);t+=sdf.x;if(sdf.x<1e-4){vec3 p=light_pos+t*ray_dir,color;return sdf_normal(p,mouse,itr);}}return vec3(0);}vec3 shaded_skin(vec2 uv,sampler2D img2,vec2 tdim,vec4 mouse,int itr,vec3 light_pos){float fh=uv.y<.45?.25:ray_march_face_height(uv*2.-1.,mouse,itr,light_pos),hh=texture(img2,uv).x,wh=texture(img2,uv).y;vec3 p=vec3(uv*2.-1.,fh+hh),face_normal=ray_march_face_normal(uv*2.-1.,mouse,itr,light_pos);vec2 fxy=uv.y<.45?vec2(0):face_normal.xy/face_normal.z;fh=1./float(tdim.x);hh=texture(img2,uv+vec2(fh,0)).x;float hxm=texture(img2,uv-vec2(fh,0)).x,hyp=texture(img2,uv+vec2(0,fh)).x,hym=texture(img2,uv-vec2(0,fh)).x,wxp=texture(img2,uv+vec2(fh,0)).y,wxm=texture(img2,uv-vec2(fh,0)).y,wyp=texture(img2,uv+vec2(0,fh)).y,wym=texture(img2,uv-vec2(0,fh)).y;hxm=-fxy.x*.9+.04*(hh-hxm)/(2.*fh);hh=-fxy.y*.9+.04*(hyp-hym)/(2.*fh);face_normal=normalize(vec3(-hxm,-hh,5));vec3 water_normal=normalize(vec3(-.02*(wxp-wxm)/(2.*fh),-.02*(wyp-wym)/(2.*fh),1)),light_dir=normalize(light_pos-p);light_pos=vec3(1,.75,.65);if(sdf_circle((uv*2.-1.-vec2(.35,.25))*vec2(1,1.33),.2)<0.)light_pos=vec3(0);if(sdf_circle((uv*2.-1.-vec2(-.35,.25))*vec2(1,1.33),.2)<0.)light_pos=vec3(0);if(sdf_circle((uv*2.-1.-vec2(0,-.35))*vec2(.72,2),.2)<0.)light_pos=vec3(.95,.55,.58);vec3 view_dir=normalize(vec3(uv*2.-1.,-1)-p),view_dir_water=normalize(vec3(uv*2.-1.,-1)-p-vec3(0,0,wh));p=reflect(view_dir,face_normal);water_normal=reflect(view_dir,water_normal);hxm=pow(max(0.,dot(p,light_dir)),10.);hyp=pow(max(0.,dot(water_normal,light_dir)),10.);hym=max(.5,dot(face_normal,light_dir));if(wh>.001)light_pos=mix(light_pos,vec3(0),wh);return light_pos*hym*.8+.15*vec3(hxm)+.15*vec3(hyp);}uniform sampler2D img1,img2,img3,img4;uniform int sub_itr;uniform vec4 mouse;uniform vec2 gdim,tdim,dim;uniform int itr;struct particle{vec2 pos;vec2 prev;bool is_selected;};struct cell{float height;float base_height;float mass;vec2 vel;vec2 cm;float cheek;};particle P(ivec2 ixy){vec4 t1=texelFetch(img1,ixy,0),t4=texelFetch(img4,ixy,0);return particle(t1.xy,t1.zw,t4.x!=0.);}bool eyelid(vec2 uv,vec2 center,vec2 radii,float slope){uv-=center;bool in_ellipse=uv.x/radii.x*(uv.x/radii.x)+uv.y/radii.y*(uv.y/radii.y)<1.,below_line=uv.y<slope*uv.x;return in_ellipse&&below_line;}bool in_face_hole(vec2 uv){return eyelid(uv,vec2(-.35,.27),vec2(.2,.3/1.9),.15)?true:eyelid(uv,vec2(.35,.27),vec2(.2,.3/1.9),-.15)?true:sdf_circle((uv-vec2(0,-.35))*vec2(.72,3.5),.2)<0.?true:sdf_circle((uv-vec2(.06,-.06))*vec2(12),.2)<0.?true:sdf_circle((uv-vec2(-.06))*vec2(12),.2)<0.?true:false;}void color_particle(out vec4 col,vec3 normal,vec2 rest_uv,vec2 pxy,vec4 fxy,int idx){if(in_face_hole(rest_uv))discard_();normal=vec3(1,1,3);vec3 light_pos2=vec3(8,4,1);bool is_selected=P(idx_to_pt_coord(idx,gdim)).is_selected;col=vec4(shaded_skin(rest_uv*.5+.5,img2,tdim,mouse,itr,normal),1);if(idx>=int((gdim.x-1.)*(gdim.y-1.)*6.)){col=vec4(ray_march_face_color(fxy.xy/dim*2.-1.,mouse,itr,light_pos2),1);return;}col.xyz+=vec3(.5,.005,.005)*texture(img3,rest_uv*.5+.5).z;}flat in int oidx;in vec3 vnormal;in vec2 vrest_uv;out vec4 ocol;void main(){color_particle(ocol,vnormal,vrest_uv,gl_PointCoord,gl_FragCoord,oidx);}");let _=i.make_tex(t,a),p=i.make_tex(t,a),f=i.make_tex(t,a),u=i.make_tex(t,a),m=i.make_tex(t,a),h=i.make_tex(t,a),x=i.make_tex(t,a),y=i.make_tex(t,a);const g=t.createFramebuffer(),b=t.getUniformLocation(s,"mouse"),k=t.getUniformLocation(l,"mouse"),w=t.getUniformLocation(s,"gdim"),z=t.getUniformLocation(l,"gdim"),P=t.getUniformLocation(s,"tdim"),B=t.getUniformLocation(l,"tdim"),A=t.getUniformLocation(s,"dim"),C=t.getUniformLocation(l,"dim"),N=t.getUniformLocation(s,"itr"),q=t.getUniformLocation(l,"itr");let T=0;const E=()=>{window.requestAnimationFrame(E),t.useProgram(s),t.disable(t.DEPTH_TEST);const L=e()?7:10;for(let e=0;e<L;e++)for(let e=0;e<1;e++)i.capture_with_framebuffer(t,g,[p,u,h,y],a,(()=>{i.bind_tex(t,s,_,"img1",0),t.uniform4f(b,o,v,n,r),i.bind_tex(t,s,f,"img2",1),t.uniform2f(w,...d),i.bind_tex(t,s,m,"img3",2),t.uniform2f(P,...a),i.bind_tex(t,s,x,"img4",3),t.uniform2f(A,...c),t.uniform1i(N,T),t.uniform1i(t.getUniformLocation(s,"sub_itr"),e),t.drawArrays(t.TRIANGLES,0,6),r=0})),[_,p,f,u,m,h,x,y]=[p,_,u,f,h,m,y,x],T+=1;t.useProgram(l),t.enable(t.DEPTH_TEST),t.viewport(0,0,...c),t.uniform1i(q,T),i.bind_tex(t,l,_,"img1",0),t.uniform4f(k,o,v,n,r),i.bind_tex(t,l,f,"img2",1),t.uniform2f(z,...d),i.bind_tex(t,l,m,"img3",2),t.uniform2f(B,...a),i.bind_tex(t,l,x,"img4",3),t.uniform2f(C,...c),t.drawArrays(t.TRIANGLES,0,d[0]*d[1]*2*3+6)};E();
